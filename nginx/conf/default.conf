upstream frontend {
    server frontend:80;
}

upstream ms-auth {
    server ms-auth:5000;
}

server {
    listen 80;
    server_name localhost;
    
    # Redirecionar para HTTPS quando em produção
    # Comentado para facilitar desenvolvimento local
    # return 301 https://$host$request_uri;
    
    # Resolver para DNS interno do Docker 
    resolver 127.0.0.11 valid=30s;
    
    # API Gateway Routes - Updated for direct ms-auth
    location /api/auth/ {
        proxy_pass http://ms-auth/api/auth/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # Adicionar headers para debug
        add_header X-Debug-Target "ms-auth" always;
        add_header X-Debug-Path $uri always;
        
        # CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Rota específica para login
    location = /api/auth/login {
        proxy_pass http://ms-auth/api/auth/login;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Content-Type $http_content_type;
        
        # Aumentar timeout para evitar falhas
        proxy_connect_timeout 30s;
        proxy_read_timeout 30s;
        proxy_send_timeout 30s;
    }
    
    # Rota específica para registro
    location = /api/auth/register {
        proxy_pass http://ms-auth/api/auth/register;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Content-Type $http_content_type;
        
        # Aumentar timeout para evitar falhas
        proxy_connect_timeout 30s;
        proxy_read_timeout 30s;
        proxy_send_timeout 30s;
    }

    # Endpoint específico para preferências do usuário
    location = /api/auth/preferences {
        proxy_pass http://ms-auth/api/auth/preferences;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
    }

    # Health check endpoint
    location = /api/auth/health {
        proxy_pass http://ms-auth/api/auth/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Logs específicos para health check
        access_log /var/log/nginx/health_access.log;
        error_log /var/log/nginx/health_error.log;
        
        # Timeout reduzido para health check
        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
        proxy_send_timeout 5s;
        
        # Headers de debug
        add_header X-Debug-Target "ms-auth" always;
        add_header X-Debug-Path $uri always;
        add_header X-Debug-Host $host always;
        
        # Cache control para health check
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # Static files (CSS, JavaScript, images, JSON)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|json)$ {
        root /usr/share/nginx/html;
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
        # Garantir o content-type correto para arquivos JSON
        types {
            application/json json;
        }
    }

    # Configuração para frontend (SPA) - DEVE VIR APÓS OUTRAS REGRAS PARA NÃO CONFLITAR
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # Headers para segurança
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
    }
}